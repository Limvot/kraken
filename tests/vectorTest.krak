import io;
import mem;
import vector;

typedef AbleToBeDestroyed (Destructable) {
    |void| destruct() {
        println("Destroyed!");
    }
};

|int| main() {
    |vector<int>| intVec.construct();
    intVec.addEnd(1);
    intVec.addEnd(3);
    intVec.addEnd(3);
    intVec.addEnd(7);
    for (|int| i = 0; i < intVec.size; i++;)
        print(intVec.at(i));
    
    println();
    
    |vector<AbleToBeDestroyed>*| desVec = new<vector<AbleToBeDestroyed>>()->construct();
    |AbleToBeDestroyed| testDestruct;
    desVec->addEnd(testDestruct);
    delete<vector<AbleToBeDestroyed>>(desVec);

    return 0;
}
