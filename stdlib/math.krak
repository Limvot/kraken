__if_comp__ __C__ simple_passthrough """
  #include <math.h>
"""

|int| fibanacci(|int| num) {
	if (num < 2)
		return 1;
	return fibanacci(num-1) + fibanacci(num-2);
}

/*********************
 *  Trig Functions
 ********************/

|double| atan(|double| arg)
{
  |double| ans = 0;
  __if_comp__ __C__{
    simple_passthrough(arg = arg : ans = ans :) """
      ans = atan(arg);
    """
  }//end C wrapper

  return ans;
}//end atan function

|double| atan2(|double| x, |double| y)
{
  |double| ans = 0;
  __if_comp__ __C__{
    simple_passthrough(x = x, y = y : ans = ans :) """
      ans = atan2(x,y);
    """
  }//end C wrapper

  return ans;
}//end atan2 function

|double| acos(|double| arg)
{
  |double| ans = 0;
  __if_comp__ __C__{
    simple_passthrough(arg = arg : ans = ans :) """
      ans = acos(arg);
    """
  }//end C wrapper

  return ans;
}//end acos function

|double| asin(|double| arg)
{
  |double| ans = 0;
  __if_comp__ __C__{
    simple_passthrough(arg = arg : ans = ans :) """
      ans = asin(arg);
    """
  }//end C wrapper

  return ans;
}//end asin function

|double| tan(|double| arg)
{
  |double| ans = 0;
  __if_comp__ __C__{
    simple_passthrough(arg = arg : ans = ans :) """
      ans = tan(arg);
    """
  }//end C wrapper

  return ans;
}//end tan function

|double| cos(|double| arg)
{
  |double| ans = 0;
  __if_comp__ __C__{
    simple_passthrough(arg = arg : ans = ans :) """
      ans = cos(arg);
    """
  }//end C wrapper

  return ans;
}//end cos function

|double| sin(|double| arg)
{
  |double| ans = 0;
  __if_comp__ __C__{
    simple_passthrough(arg = arg : ans = ans :) """
      ans = sin(arg);
    """
  }//end C wrapper

  return ans;
}//end sin function

//|int| NotPi = 3;
//|double| STD_PI = 4*atan(1);









